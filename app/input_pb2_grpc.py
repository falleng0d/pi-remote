# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from app import input_pb2 as app_dot_input__pb2

GRPC_GENERATED_VERSION = '1.68.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in app/input_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class InputMethodsStub(object):
    """InputMethods service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PressKey = channel.unary_unary(
                '/InputMethods/PressKey',
                request_serializer=app_dot_input__pb2.Key.SerializeToString,
                response_deserializer=app_dot_input__pb2.Response.FromString,
                _registered_method=True)
        self.PressHotkey = channel.unary_unary(
                '/InputMethods/PressHotkey',
                request_serializer=app_dot_input__pb2.Hotkey.SerializeToString,
                response_deserializer=app_dot_input__pb2.Response.FromString,
                _registered_method=True)
        self.PressMouseKey = channel.unary_unary(
                '/InputMethods/PressMouseKey',
                request_serializer=app_dot_input__pb2.MouseKey.SerializeToString,
                response_deserializer=app_dot_input__pb2.Response.FromString,
                _registered_method=True)
        self.MoveMouse = channel.unary_unary(
                '/InputMethods/MoveMouse',
                request_serializer=app_dot_input__pb2.MouseMove.SerializeToString,
                response_deserializer=app_dot_input__pb2.Response.FromString,
                _registered_method=True)
        self.Ping = channel.unary_unary(
                '/InputMethods/Ping',
                request_serializer=app_dot_input__pb2.Empty.SerializeToString,
                response_deserializer=app_dot_input__pb2.Response.FromString,
                _registered_method=True)
        self.SetConfig = channel.unary_unary(
                '/InputMethods/SetConfig',
                request_serializer=app_dot_input__pb2.Config.SerializeToString,
                response_deserializer=app_dot_input__pb2.Config.FromString,
                _registered_method=True)
        self.GetConfig = channel.unary_unary(
                '/InputMethods/GetConfig',
                request_serializer=app_dot_input__pb2.Empty.SerializeToString,
                response_deserializer=app_dot_input__pb2.Config.FromString,
                _registered_method=True)


class InputMethodsServicer(object):
    """InputMethods service
    """

    def PressKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PressHotkey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PressMouseKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MoveMouse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Ping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetConfig(self, request, context):
        """Configuration
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InputMethodsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PressKey': grpc.unary_unary_rpc_method_handler(
                    servicer.PressKey,
                    request_deserializer=app_dot_input__pb2.Key.FromString,
                    response_serializer=app_dot_input__pb2.Response.SerializeToString,
            ),
            'PressHotkey': grpc.unary_unary_rpc_method_handler(
                    servicer.PressHotkey,
                    request_deserializer=app_dot_input__pb2.Hotkey.FromString,
                    response_serializer=app_dot_input__pb2.Response.SerializeToString,
            ),
            'PressMouseKey': grpc.unary_unary_rpc_method_handler(
                    servicer.PressMouseKey,
                    request_deserializer=app_dot_input__pb2.MouseKey.FromString,
                    response_serializer=app_dot_input__pb2.Response.SerializeToString,
            ),
            'MoveMouse': grpc.unary_unary_rpc_method_handler(
                    servicer.MoveMouse,
                    request_deserializer=app_dot_input__pb2.MouseMove.FromString,
                    response_serializer=app_dot_input__pb2.Response.SerializeToString,
            ),
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=app_dot_input__pb2.Empty.FromString,
                    response_serializer=app_dot_input__pb2.Response.SerializeToString,
            ),
            'SetConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.SetConfig,
                    request_deserializer=app_dot_input__pb2.Config.FromString,
                    response_serializer=app_dot_input__pb2.Config.SerializeToString,
            ),
            'GetConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConfig,
                    request_deserializer=app_dot_input__pb2.Empty.FromString,
                    response_serializer=app_dot_input__pb2.Config.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'InputMethods', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('InputMethods', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class InputMethods(object):
    """InputMethods service
    """

    @staticmethod
    def PressKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/InputMethods/PressKey',
            app_dot_input__pb2.Key.SerializeToString,
            app_dot_input__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PressHotkey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/InputMethods/PressHotkey',
            app_dot_input__pb2.Hotkey.SerializeToString,
            app_dot_input__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PressMouseKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/InputMethods/PressMouseKey',
            app_dot_input__pb2.MouseKey.SerializeToString,
            app_dot_input__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MoveMouse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/InputMethods/MoveMouse',
            app_dot_input__pb2.MouseMove.SerializeToString,
            app_dot_input__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/InputMethods/Ping',
            app_dot_input__pb2.Empty.SerializeToString,
            app_dot_input__pb2.Response.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/InputMethods/SetConfig',
            app_dot_input__pb2.Config.SerializeToString,
            app_dot_input__pb2.Config.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/InputMethods/GetConfig',
            app_dot_input__pb2.Empty.SerializeToString,
            app_dot_input__pb2.Config.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
